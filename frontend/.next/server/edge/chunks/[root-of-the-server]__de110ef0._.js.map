{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n \nexport function middleware(request: NextRequest) {\n  const session = request.cookies.get('session')?.value\n \n  const { pathname } = request.nextUrl;\n\n  const isAuthPage = pathname === '/login' || pathname === '/signup';\n  const isDashboardPage = pathname.startsWith('/dashboard');\n  const isPublicInvoicePage = pathname.startsWith('/invoice/');\n  \n  // Allow unauthenticated access to public invoice pages\n  if (isPublicInvoicePage) {\n      return NextResponse.next()\n  }\n\n  // Redirect to login if not authenticated and trying to access a protected route\n  if (!session && isDashboardPage) {\n    return NextResponse.redirect(new URL('/login', request.url))\n  }\n \n  // Redirect to dashboard if authenticated and trying to access login/signup page\n  if (session && isAuthPage) {\n    return NextResponse.redirect(new URL('/dashboard', request.url))\n  }\n \n  return NextResponse.next()\n}\n \n// Match all routes except for API, Next.js static files, and image assets.\nexport const config = {\n  matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC,YAAY;IAEhD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,MAAM,aAAa,aAAa,YAAY,aAAa;IACzD,MAAM,kBAAkB,SAAS,UAAU,CAAC;IAC5C,MAAM,sBAAsB,SAAS,UAAU,CAAC;IAEhD,uDAAuD;IACvD,IAAI,qBAAqB;QACrB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC5B;IAEA,gFAAgF;IAChF,IAAI,CAAC,WAAW,iBAAiB;QAC/B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,gFAAgF;IAChF,IAAI,WAAW,YAAY;QACzB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoD;AAChE"}}]
}